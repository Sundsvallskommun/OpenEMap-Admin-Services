Ext.define("AdmClient.view.MapConfiguration",{extend:Ext.panel.Panel,alias:"widget.mapConfiguration",layout:"border",border:!1,initComponent:function(){this.items=[{border:!1,bodyPadding:10,region:"north",tbar:[{xtype:"combo",itemId:"configurations",displayField:"name",enableKeyEvents:!0},{text:"Spara",itemId:"saveConfiguration"}]},{xtype:"tabpanel",region:"center",items:[{title:"Map extent",layout:"fit",border:!1,itemId:"mapPanel",disabled:!0,tbar:[{xtype:"textfield",disabled:!0,itemId:"configId",
width:50},{xtype:"button",text:"Pan",itemId:"pan",icon:"resources/images/arrow-move.png",enableToggle:!0,pressed:!0},{xtype:"button",itemId:"markExtent",text:"Mark extent",icon:"resources/images/figur-R.png",iconCls:"extent",enableToggle:!0},{xtype:"checkbox",fieldLabel:"Autoclear draw layer",itemId:"autoClearDrawLayer"},{xtype:"textfield",itemId:"attribution",enableKeyEvents:!0,fieldLabel:"Attribution",width:"100%"}],margin:12},{title:"Tools",layout:"border",border:!1,itemId:"tools",disabled:!0,
margin:12,items:[{xtype:"toolsGrid",itemId:"toolsGrid",region:"north"},{xtype:"panel",region:"center",itemId:"toolGeneral"}]},{title:"Search",xtype:"searchPanel",itemId:"searchGridConfig",layout:"fit",disabled:!0},{title:"Layers",xtype:"layerPanel",itemId:"layerTab",disabled:!0},{title:"Preview",itemId:"previewMap",layout:"fit",disabled:!0,hidden:!0}]},{title:"Config",itemId:"configurationPreviewPanel",layout:"fit",disabled:!0,collapsible:!0,collapsed:!0,height:600,region:"south",items:[{xtype:"textarea",
itemId:"configurationTextfield"}],bbar:["-\x3e",{xtype:"button",text:"Export"}]}];this.callParent(arguments)}});
Ext.define("AdmClient.view.Main",{extend:Ext.panel.Panel,alias:"widget.main",title:"RIGES Administration",layout:"border",border:!1,header:!1,bodyPadding:3,renderTo:"contentitem",region:"center",initComponent:function(){this.items=[{xtype:"tabpanel",tabPosition:"left",region:"center",items:[{layout:"border",margin:8,title:"Map configuration",items:[{xtype:"mapConfiguration",region:"center"}]}]},{xtype:"mainToolbar",region:"north",style:{marginBottom:"20px"}}];this.callParent(arguments)}});
Ext.define("AdmClient.controller.Main",{extend:Ext.app.Controller,views:["Main","MapConfiguration"],refs:[{ref:"form",selector:"form"},{ref:"currentZoom",selector:"#currentZoom"},{ref:"center",selector:"#center"}],init:function(){this.control({"#mapPanel":{aftermapmove:this.onMapMove},"#currentZoom":{keyup:this.onZoomKeyUp}})},onZoomKeyUp:function(a,b){var c=parseInt(a.value,10);0<c&&(20>c&&b.keyCode===b.ENTER)&&this.map.setCenter(this.map.center,c)},setZoom:function(){}});
Ext.define("AdmClient.controller.MainToolbar",{extend:Ext.app.Controller,init:function(){this.control({"#about":{click:this.aboutButtonClick}})},aboutButtonClick:function(){(new AdmClient.view.about.About).show()}});
Ext.define("AdmClient.view.mapconfiguration.layer.LayerDetails",{extend:Ext.window.Window,alias:"widget.layerDetails",layout:{type:"border",margin:8},title:"Lager inst\x26auml;llningar",width:600,height:400,defaultAlign:"c",constructor:function(){this.layer=arguments[0].selectedLayer;this.panelGrid=arguments[0].grid;null===this.layer?(Ext.Msg.show({title:"Inget lagernamn.",msg:"Kan ej editera grupplager.",buttons:Ext.Msg.OK,icon:Ext.Msg.WARNING}),this.close()):(this.title+=" - "+this.layer.name,this.callParent(arguments))},
getAttributeCollection:function(a){var b=[],c;for(c in a)b.push([c,"",!1]);return b},getItem:function(a){a.forEach(function(a){console.log(a)})},initComponent:function(){var a=this;this.modal=!0;if(this.layer.wfs){var b=proxyUrl+(this.layer.wfs.url?this.layer.wfs.url:wfsServer)+"?service\x3dwfs\x26request\x3dDescribeFeatureType\x26version\x3d1.0.0\x26typeName\x3d"+function(a){if(a.wfs.featurePrefix&&a.wfs.featureType)return a.wfs.featurePrefix+":"+a.wfs.featureType;if(a.name)return a.name;Ext.Error.raise({msg:"No valid layer name for WFS-layer",
option:this})}(this.layer);this.store=Ext.create("GeoExt.data.AttributeStore");this.store.getProxy();this.store.setUrl(b);this.store.load()}else this.layer.wms&&(this.layer.wms.url.split("/"),this.store=Ext.create("Ext.data.ArrayStore",{fields:[{name:"name"},{name:"alias"},{name:"visible",type:"boolean",defaultValue:!0},{name:"mainAttribute",type:"boolean",defaultValue:!1}]}),this.wmsStore=Ext.create("GeoExt.data.WmsCapabilitiesLayerStore",{url:proxyUrl+defaultWMSServer}),this.wmsStore.load({scope:this,
callback:function(a){var b=function(a){if(a.wms.params&&a.wms.params.LAYERS)return a.wms.params.LAYERS;if(a.name)return a.name;Ext.Error.raise({msg:"No valid layer name for WMS-layer",option:this})}(this.layer);b&&a&&0<a.length?(a=a.filter(function(a){return a.get("name")===b}),0<a.length?a.forEach(function(a){a=a.get("bbox");var c,j;for(j in a){c=new OpenLayers.Bounds.fromArray(a[j].bbox);a=this.layer.wms.url?this.layer.wms.url:defaultWMS;a=a.split("?")[0];c=proxyUrl+a+"?request\x3dGetFeatureInfo\x26service\x3dWMS\x26version\x3d1.1.1\x26layers\x3d"+
b+"\x26styles\x3d\x26srs\x3d"+j+"\x26bbox\x3d"+c.toString()+"\x26width\x3d1\x26height\x3d1\x26query_layers\x3d"+b+"\x26info_format\x3dapplication/vnd.ogc.gml\x26feature_count\x3d1\x26x\x3d0\x26y\x3d0";break}Ext.Ajax.request({scope:this,url:c,success:function(a){if(a.responseXML)if(a=(new OpenLayers.Format.GML).read(a.responseXML),0<a.length){a=this.getAttributeCollection(a[0].attributes);if(this.layer.metadata&&this.layer.metadata.attributes&&this.layer.metadata.attributes instanceof Object){var b=
this.layer.metadata.attributes,c=function(a){return a[0]===d};f=[];for(var d in b){var e=a.filter(c,f);0<e.length&&(e[0][1]=""===e[0][1]?b[d].alias:e[0][1],e[0][2]=!0,e[0][3]=b[d].mainAttribute?b[d].mainAttribute:!1)}}this.store.loadData(a)}else this.close(),Ext.Error.raise({title:"Kommunikationsproblem",msg:"Kan inte h\u00e4mta information om lagret"});else this.close(),Ext.Error.raise({title:"Kommunikationsproblem",msg:"Kan inte h\u00e4mta information om lagret"})}})},this):(this.close(),Ext.Error.raise({msg:"Cant get metadata for layer"+
b,option:this}))):(this.close(),Ext.Error.raise({msg:"Cant get metadata for layer"+b,option:this}))}}));this.store&&this.store.addListener("load",function(b,d,e){e?(d.forEach(function(b){a.layer.metadata&&(a.layer.metadata.attributes&&a.layer.metadata.attributes[b.data.name]instanceof Object)&&(b.data.alias=a.layer.metadata.attributes[b.data.name].alias,b.data.visible=!0,b.data.mainAttribute=void 0!==a.layer.metadata.attributes[b.data.name].mainAttribute?a.layer.metadata.attributes[b.data.name].mainAttribute:
!1)}),b.update()):Ext.Error.raise({msg:"Cant get metadata for layer",option:this})});this.cellEditing=new Ext.grid.plugin.CellEditing({clicksToEdit:1});this.items=[{region:"center",xtype:"grid",itemId:"layerDetailsGrid",store:this.store||void 0,plugins:[this.cellEditing],columns:[{header:"Kolumn",dataIndex:"name"},{header:"Alias",dataIndex:"alias",editor:{allowBlank:!1}},{header:"Synlig",xtype:"checkcolumn",dataIndex:"visible",listeners:{checkchange:function(b,d,e){e?a.store.data.items[d].data.alias=
a.store.data.items[d].data.alias||a.store.data.items[d].data.name:(a.store.data.items[d].data.alias="",a.store.data.items[d].data.mainAttribute=!1);a.store.update()}}},{header:"Huvudattribut",xtype:"checkcolumn",dataIndex:"mainAttribute",listeners:{checkchange:function(b,d,e){e?(a.store.data.items[d].data.mainAttribute=!0,a.store.data.items[d].data.alias=a.store.data.items[d].data.alias||a.store.data.items[d].data.name):a.store.data.items[d].data.mainAttribute=!1;a.store.update();a.update()}}}]},
{region:"south",xtype:"toolbar",items:["-\x3e",{xtype:"button",text:"Spara",itemId:"saveLayerDetail"},{xtype:"button",text:"Avbryt",itemId:"cancelLayerDetail",handler:function(){a.close()}}]}];this.callParent(arguments)}});
Ext.define("AdmClient.model.Layer",{extend:Ext.data.Model,fields:["layerId",{name:"name",defaultValue:""},{name:"wms",defaultValue:null},"group","metadata","isSearchable","urlToMetadata","serverId",{name:"queryable",type:"boolean",defaultValue:!1},{name:"clickable",type:"boolean",defaultValue:!1},{name:"isGroupLayer",type:"boolean",defaultValue:!1},{name:"isBaseLayer",mapping:"wms.options.isBaseLayer",type:"boolean"},{name:"visibility",mapping:"wms.options.visibility",type:"boolean"},{name:"expanded",
type:"boolean",defaultValue:!1},{name:"wfs",mapping:"wfs",type:"object",defaultValue:null},{name:"layer",type:"object"},{name:"layers",type:"array",defaultValue:null}],proxy:{type:"rest",url:"/openemapadmin/layers"}});
Ext.define("AdmClient.view.mapconfiguration.layer.LayerPanel",{extend:Ext.panel.Panel,alias:"widget.layerPanel",layout:{type:"hbox",align:"stretch"},initComponent:function(){this.items=[{xtype:"panel",flex:1,padding:5,autoScroll:!0,items:[{xtype:"textfield",itemId:"layerServiceSelector",fieldLabel:"WMS server",height:30,width:500,enableKeyEvents:!0,value:"undefined"!==typeof defaultWMSServer?defaultWMSServer:void 0!==wmsGetCapabilities?wmsGetCapabilities:""},{xtype:"treepanel",itemId:"mapConfigWMSLayerTree",
minHeight:300,hideHeaders:!0,viewConfig:{plugins:{ptype:"treeviewdragdrop",enableDrop:!1},copy:!0},store:Ext.create("AdmClient.store.WmsCapabilitiesLayerTree"),displayField:"name"}]},{xtype:"treepanel",id:"mapConfigLayerTree",padding:"33 5 5 5",flex:1,viewConfig:{plugins:{ptype:"treeviewdragdrop"}},store:Ext.create("AdmClient.store.GroupedLayerTree",{root:{name:"Lager",expanded:!0}}),displayField:"name",hideHeaders:!1,tbar:[{text:"Nytt grupplager",itemId:"newGroupLayer",icon:imageBasePath+"resources/font-awesome/black/png/16/plus.png"}],
columns:[{xtype:"treecolumn",flex:1,dataIndex:"name",text:"Lagernamn"},{xtype:"actioncolumn",width:70,text:"\x26Auml;ndra \x3cbr /\x3e lagernamn",align:"center",icon:imageBasePath+"resources/font-awesome/black/png/16/pencil.png",tooltip:"\x26Auml;ndra namn",handler:function(a,b){var c=a.getStore().getAt(b);Ext.Msg.prompt("Name","Nytt lagernamn:",function(a,b){"ok"==a&&(c.set("name",b.trim()),c.store.save())})}},{xtype:"checkcolumn",tooltip:"Baslager",text:"Baslager",width:70,dataIndex:"isBaseLayer",
renderer:function(a,b){return b.record.get("isGroupLayer")||"root"===b.record.get("id")?"\x3cspan\x3e\x3c/span\x3e":Ext.grid.column.CheckColumn.prototype.renderer.apply(this,arguments)}},{xtype:"checkcolumn",width:70,tooltip:"Synlig",text:"Synlig",dataIndex:"visibility",renderer:function(a,b){return b.record.get("isGroupLayer")||"root"===b.record.get("id")?"\x3cspan\x3e\x3c/span\x3e":Ext.grid.column.CheckColumn.prototype.renderer.apply(this,arguments)}},{xtype:"checkcolumn",width:70,tooltip:"Klickbart lager",
text:"Klickbar",dataIndex:"clickable",renderer:function(a,b){if(b.record.get("isGroupLayer")||"root"===b.record.get("id")||!b.record.get("queryable"))return"\x3cspan\x3e\x3c/span\x3e";b.record.get("clickable");return Ext.grid.column.CheckColumn.prototype.renderer.apply(this,arguments)}},{xtype:"actioncolumn",width:70,text:"Ta bort",align:"center",icon:imageBasePath+"resources/font-awesome/black/png/16/times.png",tooltip:"Ta bort",handler:function(a,b){for(var c=a.getStore().getAt(b),d=0;d<c.childNodes.length;d++)c.removeChild(c.childNodes[d]);
c.remove()}},{xtype:"actioncolumn",width:70,tooltip:"Alias kolumner, s\x26ouml;kbart etc",align:"center",text:"Inst\x26auml;llningar",isDisabled:function(a,b,c,d,e){return e.data.isGroupLayer},renderer:function(a,b){return!b.record.get("queryable")?"\x3cspan\x3e\x3c/span\x3e":'\x3cimg role\x3d"button" class\x3d"x-action-col-icon x-action-col-0" src\x3d"'+imageBasePath+'resources/font-awesome/black/png/16/table.png" /\x3e'},handler:function(a,b){var c=null;0===a.getStore().data.items[b].childNodes.length&&
(c=a.getStore().data.items[b].data);Ext.Error.handle=function(a){Ext.Msg.show({title:a.title||"Fel",msg:a.msg||"Odefinierat fel",buttons:Ext.Msg.OK,icon:Ext.Msg.WARNING})};Ext.create("AdmClient.view.mapconfiguration.layer.LayerDetails",{selectedLayer:c,grid:a}).show()}}]}];this.callParent(arguments)}});
Ext.define("AdmClient.controller.MapConfiguration",{extend:Ext.app.Controller,refs:[{ref:"configurations",selector:"#configurations"},{ref:"attribution",selector:"#attribution"},{ref:"configurationTextfield",selector:"#configurationTextfield"},{ref:"toolsTab",selector:"#tools"},{ref:"mapPanel",selector:"#mapPanel"},{ref:"searchGrid",selector:"#searchGridConfig"},{ref:"layerTab",selector:"#layerTab"},{ref:"previewMap",selector:"#previewMap"},{ref:"configurationPreview",selector:"#configurationPreviewPanel"},
{ref:"autoClearDrawLayer",selector:"#autoClearDrawLayer"},{ref:"configurationPreviewPanel",selector:"#configurationPreviewPanel"}],init:function(){this.control({"#pan":{click:this.panMap},"#markExtent":{click:this.markExtent},"#mapPanel":{render:this.mapPanelRender},"#saveConfiguration":{click:this.saveConfiguration},"#configurations":{keyup:this.setConfigurationName,render:this.renderConfiguration,select:this.selectConfiguration},"#configurationPreviewPanel":{hide:this.configurationPreviewPanelHide,
expand:this.configurationPreviewPanelShow,beforeshow:this.configurationPreviewPanelBeforeShow},"#attribution":{keyup:this.setAttribution},"#autoClearDrawLayer":{change:this.autoClearDrawLayerChanged}});this.application.on({configuration_change:this.changeConfiguration,scope:this})},panMap:function(){Ext.ComponentQuery.query("#markExtent")[0].toggle();var a=this.mapClient.map.controls.filter(function(a){return a instanceof OpenLayers.Control.DrawFeature})[0];a&&a.active&&a.deactivate()},markExtent:function(){Ext.ComponentQuery.query("#pan")[0].toggle();
var a=this.mapClient.map.controls.filter(function(a){return a instanceof OpenLayers.Control.DrawFeature})[0];a&&a.activate()},mapClient:null,mapPanelRender:function(a){this.mapClient=Ext.create("OpenEMap.Client");Ext.Ajax.request({scope:this,url:"admin.json",success:function(b){b=Ext.decode(b.responseText);AdmClient.app.config=Ext.applyIf(AdmClient.app.config,b);this.mapClient&&this.mapClient.destroy();this.mapClient.configure(Ext.clone(b),{gui:{map:{},zoomTools:{}}});a.add(this.mapClient.gui.container);
a.doLayout();b=new OpenLayers.Control.DrawFeature(this.mapClient.mapPanel.drawLayer,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4,irregular:!0}});this.mapClient.map.addControl(b);this.mapClient.drawLayer.events.register("featureadded",null,function(a){AdmClient.app.config.extent=a.feature.geometry.getBounds().toArray()})}})},saveConfiguration:function(){var a=this;if("Default"===AdmClient.app.config.name)Ext.MessageBox.alert('"Default" is an invalid configuration name.',"You are trying to write to a write protected template. Choose another template name");
else{var b=Ext.getStore("configurationTreeStore");AdmClient.app.config.layers=b.getLayerConfiguration();AdmClient.app.config.isPublic=!0;b=appPath+"/adminconfigs/config";b+=void 0===AdmClient.app.config.configId?"":"/"+AdmClient.app.config.configId;Ext.Ajax.request({url:b,method:void 0===AdmClient.app.config.configId?"POST":"PUT",jsonData:AdmClient.app.config,success:function(){Ext.MessageBox.alert("Save","Configuration saved");a.renderConfiguration()},failure:function(a){Ext.MessageBox.alert("Error",
"Error saving: "+a.message)}})}},setConfigurationName:function(a){AdmClient.app.config.name=a.getValue();AdmClient.app.config.configId=void 0;this.getConfigId().setValue(AdmClient.app.config.configId||"");this.setConfigText()},renderConfiguration:function(){var a=this;Ext.Ajax.request({url:appPath+"/adminconfigs/configlist",method:"GET",success:function(b){b=JSON.parse(b.responseText);b=Ext.create("Ext.data.Store",{fields:["name","configId"],data:b});var c=a.getConfigurations();c.store=b;c.queryMode=
"local";c.displayField="name";c.valueField="configId"},error:function(a){Ext.MessageBox.alert("Erro","Error getting configurations: "+a.message)}})},selectConfiguration:function(a,b){0<b.length&&this.loadConfiguration(b[0].get("configId"))},changeConfiguration:function(a){AdmClient.app.config=Ext.apply(AdmClient.app.config,a);this.getAttribution().setValue(AdmClient.app.config.attribution);this.getToolsTab().setDisabled(!1);this.getMapPanel().setDisabled(!1);this.getSearchGrid().setDisabled(!1);this.getPreviewMap().setDisabled(!1);
this.getPreviewMap().isVisible()&&AdmClient.app.getPreviewMapController().previewRender(this.getPreviewMap());this.getLayerTab().setDisabled(!1);this.getConfigurationPreview().setDisabled(!1);this.getAutoClearDrawLayer().setValue(AdmClient.app.config.autoClearDrawLayer||!1);AdmClient.app.config.extent&&(a=OpenLayers.Bounds.fromArray(AdmClient.app.config.extent),this.mapClient.map.zoomToExtent(a))},loadConfiguration:function(a){Ext.Ajax.request({url:appPath+"/adminconfigs/config/"+a,method:"GET",success:function(a){a=
JSON.parse(a.responseText);this.application.fireEvent("configuration_change",a)},error:function(b){Ext.MessageBox.alert("Erro","Error getting configuration: "+a+", "+b.message)},scope:this})},configurationPreviewPanelShow:function(){this.setConfigText()},setConfigText:function(){var a=JSON.stringify(AdmClient.app.config,null," ");this.getConfigurationTextfield().setValue(a)},setAttribution:function(){AdmClient.app.config.attribution=this.getAttribution().getValue();this.setConfigText()},autoClearDrawLayerChanged:function(a,
b){AdmClient.app.config.autoClearDrawLayer=b}});
Ext.define("AdmClient.controller.Servers",{extend:Ext.app.Controller,init:function(){this.control({"#addSettingsRow":{click:this.settingsGridAdd},"#saveSettings":{click:this.save}})},serversGridEdit:function(){},searchGridEdit:function(){},settingsGridAdd:function(a){(a=Ext.ComponentQuery.query("button[id\x3d"+a.id+"] ^ grid"))&&a instanceof Array&&a[0].getStore().add({})},save:function(a){var b=Ext.ComponentQuery.query("button[id\x3d"+a.getId()+"] ^ grid")[0];b&&(b.getStore().sync({callback:function(){b.getStore().load()}}),
b.getStore().commitChanges())}});Ext.define("AdmClient.view.mapconfiguration.tools.details.Identify",{extend:Ext.panel.Panel,alias:"widget.identify",initComponent:function(){this.items=[{xtype:"button",text:"Identify"}];this.callParent(arguments)}});Ext.define("AdmClient.view.mapconfiguration.tools.details.Popup",{extend:Ext.panel.Panel,alias:"widget.popup",initComponent:function(){this.items=[{xtype:"button",text:"Popup"}];this.callParent(arguments)}});
Ext.define("AdmClient.view.mapconfiguration.tools.details.DrawGeometry",{extend:Ext.panel.Panel,initComponent:function(){this.items=[{xtype:"button",text:"draw geometry"}];this.callParent(arguments)}});Ext.define("AdmClient.view.mapconfiguration.tools.details.Print",{extend:Ext.panel.Panel,alias:"widget.print",initComponent:function(){this.items=[{xtype:"button",text:"Print"}];this.callParent(arguments)}});
Ext.define("AdmClient.view.mapconfiguration.tools.details.DeleteGeometry",{extend:Ext.panel.Panel,alias:"widget.deletegeometry",initComponent:function(){this.items=[{xtype:"button",text:"DeleteGeometry"}];this.callParent(arguments)}});Ext.define("AdmClient.view.mapconfiguration.tools.details.ModifyGeometry",{extend:Ext.panel.Panel,alias:"widget.modifygeometry",initComponent:function(){this.items=[{xtype:"button",text:"ModifyGeometry"}];this.callParent(arguments)}});
Ext.define("AdmClient.view.mapconfiguration.tools.details.MeasureLine",{extend:Ext.panel.Panel,alias:"widget.measureline",initComponent:function(){this.items=[{xtype:"button",text:"MeasureLine"}];this.callParent(arguments)}});
Ext.define("AdmClient.view.mapconfiguration.tools.details.DrawObject",{extend:Ext.form.Panel,alias:"widget.drawobject",type:"drawobject",typeLabel:"Type",widthLabel:"Width",lengthLabel:"Length",m1Label:"M1",m2Label:"M2",angleLabel:"Angle",initComponent:function(){var a=[{xtype:"numberfield",fieldLabel:this.widthLabel,itemId:"w",minValue:0},{xtype:"numberfield",fieldLabel:this.lengthLabel,itemId:"l",minValue:0},{xtype:"numberfield",fieldLabel:this.m1Label,itemId:"m1",minValue:0},{xtype:"numberfield",
fieldLabel:this.m2Label,itemId:"m2",minValue:0},{xtype:"numberfield",itemId:"angle",fieldLabel:this.angleLabel,value:0}];this.items=[{xtype:"checkboxfield",boxLabel:"User customizable"},{width:230,xtype:"radiogroup",vertical:!0,fieldLabel:"Type",itemId:"type",items:[{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-r"\x3e\x3c/div\x3e',name:"rb",inputValue:"R",checked:!0},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-l"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"L"},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-d"\x3e\x3c/div\x3e',
name:"rb",enabled:!1,inputValue:"D"},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-o"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"O"}]}];this.items=this.items.concat(a);this.callParent(arguments);this.getConfig()},setConfig:function(){this.getToolConfig()},getConfig:function(){var a=this.getToolConfig().objectConfig;a&&(a.type=this.down("#type").getValue())},getToolConfig:function(){return AdmClient.app.config.tools.filter(function(a){return a.type=this.type},this)}});
Ext.define("AdmClient.view.mapconfiguration.tools.details.FullExtent",{extend:Ext.panel.Panel,alias:"widget.fullextent",initComponent:function(){this.items=[{xtype:"button",text:"FullExtent"}];this.callParent(arguments)}});
Ext.define("AdmClient.view.mapconfiguration.tools.details.General",{extend:Ext.tab.Panel,style:{marginTop:"20px"},toolName:null,constructor:function(){this.tool=arguments[0]||"";this.toolName=arguments[1]||"";this.callParent(arguments)},initComponent:function(){this.items=[{title:"Settings for tool "+this.toolName,items:[{title:"General settings",xtype:"fieldset",items:[{xtype:"textfield",fieldLabel:"Tooltip"},{xtype:"textfield",fieldLabel:"Min scale",maskRe:/[0-9]/}]},{xtype:"fieldset",title:"Details settings",
itemId:"details"}]}];this.callParent(arguments)}});Ext.define("AdmClient.view.mapconfiguration.tools.details.MeasureArea",{extend:Ext.panel.Panel,alias:"widget.measurearea",initComponent:function(){this.items=[{xtype:"button",text:"MeasureArea"}];this.callParent(arguments)}});
Ext.define("AdmClient.controller.ToolsGrid",{extend:Ext.app.Controller,refs:[{ref:"configurations",selector:"#configurations"},{ref:"toolsGrid",selector:"#toolsGrid"},{ref:"toolGeneral",selector:"#toolGeneral"}],init:function(){this.control({"#toolsGrid":{render:this.gridRender},"#details":{render:this.detailsRender}});this.application.on({configuration_change:this.markTools,scope:this})},views:[],gridRender:function(){this.markTools()},markTools:function(){for(var a=this.getToolsGrid(),b=0;b<a.store.data.items.length;b++)a.store.data.items[b].data.selected=
!1,a.store.data.items[b].save();for(b=0;b<a.store.data.items.length;b++){a.store.data.items[b].data.selected=!1;for(var c=a.store.data.items[b],d=0;d<AdmClient.app.config.tools.length;d++)AdmClient.app.config.tools[d].id===c.data.id&&(c.data.selected=!0),c.save()}a.updateLayout()},toolsHasEmptyObject:function(){for(var a=0;a<AdmClient.app.config.tools.length;a++)if(0<Object.keys(AdmClient.app.config.tools[a]).length)return!0;return!1},detailsRender:function(a){a.removeAll(!1);var b="AdmClient.view.mapconfiguration.tools.details."+
this.getToolsGrid().getSelectionModel().selected.items[0].data.toolName,b=Ext.create(b);a.add(b)}});Ext.define("AdmClient.store.Layers",{extend:Ext.data.Store,model:"AdmClient.model.Layer",proxy:{type:"rest",url:"/openemapadmin/layers"},autoLoad:!0});
Ext.define("AdmClient.view.settings.LayersConfigured",{extend:Ext.grid.Panel,alias:"widget.layersconfigured",title:"Configured layers",store:"Layers",itemId:"layers",autoScroll:!0,minHeight:200,hideHeaders:!0,selType:"cellmodel",viewConfig:{stripeRows:!1},initComponent:function(){this.columns=[{dataIndex:"name",sortable:!1,flex:1},{xtype:"actioncolumn",width:25,itemId:"settings",items:[{icon:"resources/images/gear.png",tooltip:"Settings"}]},{xtype:"actioncolumn",width:25,itemId:"delete",items:[{icon:"resources/images/cross.png",
tooltip:"Delete"}]}];this.callParent(arguments)}});
Ext.define("AdmClient.view.settings.LayersWMS",{extend:Ext.panel.Panel,alias:"widget.layerswms",layout:{type:"vbox",align:"stretch"},title:"WMS layers",initComponent:function(){this.items=[{xtype:"combobox",fieldLabel:"WMS server"},{xtype:"grid",store:Ext.create("GeoExt.data.WmsCapabilitiesLayerStore",{url:"/riges/geoserver/wms?request\x3dGetCapabilities\x26version\x3d1.1.0",autoLoad:!0}),itemId:"wmslayers",flex:1,hideHeaders:!0,autoScroll:!0,columns:[{dataIndex:"name",sortable:!0,flex:1}]}];this.callParent(arguments)}});
Ext.define("AdmClient.view.settings.Layers",{extend:Ext.panel.Panel,alias:"widget.layers",title:"Layers",layout:{type:"hbox",align:"stretch"},initComponent:function(){this.items=[{xtype:"layerswms",padding:10,flex:1},{layout:{type:"vbox",align:"center",pack:"center"},items:{xtype:"button",text:"Add -\x3e",itemId:"add"}},{xtype:"layersconfigured",padding:10,flex:1}];this.callParent(arguments)}});
Ext.define("AdmClient.view.settings.LayerSettings",{extend:Ext.form.Panel,requires:[],alias:"widget.layersettings",defaultType:"textfield",initComponent:function(){this.items=[{fieldLabel:"Name",name:"name"}];this.callParent(arguments)}});
Ext.define("AdmClient.controller.Layers",{extend:Ext.app.Controller,refs:[{ref:"layers",selector:"#layers"},{ref:"wmslayers",selector:"#wmslayers"}],views:["settings.Layers"],stores:["Layers"],init:function(){this.control({"#add":{click:this.onAddClick},"#layers":{edit:this.onEdit},"#save":{click:this.onSaveClick},"#settings":{click:this.onSettingsClick},"#delete":{click:this.onDeleteClick}})},onSaveClick:function(){this.getLayersStore().sync()},onAddClick:function(){var a=this.getLayersStore(),b=
this.getWmslayers().getSelectionModel().getSelection();1===b.length&&(b=b[0],b=Ext.create("AdmClient.model.Layer",{name:b.get("name"),isGroupLayer:null,wms:{params:{layers:b.get("name")}}}),a.add(b),b.save())},onEdit:function(a,b){b.record.save()},onSettingsClick:function(a,b,c,d,e,h){a=Ext.create("AdmClient.view.settings.LayerSettings");Ext.create("Ext.Window",{height:200,width:300,padding:10,title:"Layer settings",layout:"fit",modal:!0,items:a,buttons:[{text:"Save"}]}).show();a.getForm().loadRecord(h)},
onDeleteClick:function(a,b,c,d,e,h){h.destroy()}});Ext.define("AdmClient.view.mapconfiguration.search.SearchPanel",{extend:Ext.grid.Panel,alias:"widget.searchPanel",initComponent:function(){Ext.applyIf(this,{columns:[{text:"Municipality",dataIndex:"Municipality",width:200},{xtype:"checkcolumn",dataIndex:"selected"}]});this.store=new AdmClient.store.Municipalities;this.callParent(arguments)}});
Ext.define("AdmClient.controller.Search",{extend:Ext.app.Controller,refs:[{ref:"configurations",selector:"#configurations"},{ref:"searchGrid",selector:"#searchGridConfig"}],init:function(){this.control({"#searchGridConfig":{render:this.markGrid},"#searchGridConfig checkcolumn":{checkchange:this.municipalityChanged}});this.application.on({configuration_change:this.configurationChanged,scope:this})},markGrid:function(){for(var a=this.getSearchGrid(),b=0;b<a.store.data.items.length;b++)a.store.data.items[b].data.selected=
!1,a.store.data.items[b].save();for(b=0;b<a.store.data.items.length;b++){a.store.data.items[b].data.selected=!1;var c=a.store.data.items[b];if(AdmClient.app.config.search)for(var d=0;d<AdmClient.app.config.search.searchAddresses.options.municipalities.length;d++){var e=AdmClient.app.config.search.searchAddresses.options.municipalities[d];e.constructor===String&&e===c.data.Municipality&&(c.data.selected=!0,c.save())}}a.updateLayout()},configurationChanged:function(){this.markGrid()},municipalityChanged:function(){var a=
this.getSearchGrid().getStore();a.sync();AdmClient.app.config.search=AdmClient.app.config.search||{};AdmClient.app.config.search.searchEstates={};AdmClient.app.config.search.searchEstates.options={};AdmClient.app.config.search.searchEstates.options.municipalities=[];AdmClient.app.config.search.searchAddresses={};AdmClient.app.config.search.searchAddresses.options={};AdmClient.app.config.search.searchAddresses.options.municipalities=[];AdmClient.app.config.search.searchPlacenames={};AdmClient.app.config.search.searchPlacenames.options=
{};AdmClient.app.config.search.searchPlacenames.options.municipalities=[];a.data.items.forEach(function(a){a.data.selected&&(AdmClient.app.config.search.searchEstates.options.municipalities.push(a.data.Municipality),AdmClient.app.config.search.searchAddresses.options.municipalities.push(a.data.Municipality),AdmClient.app.config.search.searchPlacenames.options.municipalities.push(a.data.municipalityCode))})}});
Ext.define("AdmClient.view.mapconfiguration.map.PreviewMap",{extend:Ext.panel.Panel,alias:"widget.previewMap",initComponent:function(){this.items=[{border:!1,itemId:"previewMapPanel",margin:12}];this.callParent(arguments)}});
Ext.define("AdmClient.controller.PreviewMap",{extend:Ext.app.Controller,init:function(){this.control({"#previewMap":{show:this.previewRender}})},previewRender:function(a){this.mapPanel&&(this.mapPanel.removeAll(),delete this.mapPanel,a.doLayout());this.mapPanel=a;var b=Ext.create("OpenEMap.Client");b.destroy();var c=Ext.clone(AdmClient.app.config);b.configure(c,{gui:{map:{},zoomTools:{},layers:{},baseLayers:{},objectconfig:{}}});a.add(b.gui.container);a.doLayout()}});
Ext.define("AdmClient.store.GroupedLayerTree",{extend:Ext.data.TreeStore,id:"configurationTreeStore",model:"AdmClient.model.Layer",defaultRootProperty:"layers",proxy:{type:"memory"},maxLayerIndex:1E3,listeners:{beforeinsert:function(a,b,c){return this.onBeforeInsertAppend(a,b,c)},beforeappend:function(a,b){return this.onBeforeInsertAppend(a,b)},insert:function(a,b){this.onInsertAndAppend(a,b)},append:function(a,b){this.onInsertAndAppend(a,b)},remove:function(a,b,c){this.onRemove(a,b,c)},move:function(a,
b,c,d,e){this.onMove(a,b,c,d,e)},datachanged:function(){this.onUpdate()},layerMetadataChange:function(){AdmClient.app.config.layers=this.getLayerConfiguration()}},constructor:function(a){a=Ext.apply({},a);this.callParent([a])},onMove:function(a,b){console.log("onMove");console.log(b)},onBeforeInsertAppend:function(){return!0},getLayerName:function(a){return a.wms&&a.wms.params&&(a.wms.params.LAYERS||a.wms.params.layers)?a.wms.params.LAYERS||a.wms.params.layers:a.name},onInsertAndAppend:function(a,
b){if(!this._inserting){this._inserting=!0;if("GeoExt.data.WmsCapabilitiesLayerModel"===b.$className){b.set("allowDrag",!0);var c=this.getLayerName(b.data);if(b.raw&&b.raw.CLASS_NAME&&-1<b.raw.CLASS_NAME.indexOf("OpenLayers.Layer")){b.set("layer",b.raw);if(-1<b.raw.CLASS_NAME.indexOf("OpenLayers.Layer.WMS")){var d={url:b.raw.url,options:{displayInLayerSwitcher:!0,isBaseLayer:!1,visibility:!0}};d.params=b.raw.params?b.raw.params:{layers:c};b.raw.metadata&&b.raw.metadata.legendURL&&(d.options.legendURL=
b.raw.metadata.legendURL);b.raw.metadata&&(b.raw.metadata.metadataURLs&&0<b.raw.metadata.metadataURLs.length)&&(d.metadataURL=b.raw.metadata.metadataURLs[0]);b.set("wms",d)}b.raw.metadata&&b.raw.metadata.queryable&&b.set("queryable",b.raw.metadata.queryable);b.set("isGroupLayer",!1);b.set("clickable",!1);b.get("layer");b.getLayer=function(){this.get("layer")};this.getWFSSettings(b)}}this._inserting=!1}},onRemove:function(a,b,c){!this._removing&&!c&&(this._removing=!0,b.cascadeBy(function(a){(a=a.get("layer"))&&
a.map&&this.map.removeLayer(a)},this),AdmClient.app.config.layers=this.getLayerConfiguration(),delete this._removing)},onUpdate:function(a){if(!this._updating){this._updating=!0;var b=null;a&&a.data&&(b=a.data);if(b&&"root"===b.id){this._updating=!1;return}a=Ext.getStore("configurationTreeStore");AdmClient.app.config.layers=a.getLayerConfiguration()}this._updating=!1},getWFSSettings:function(a){if(!a.data||!a.data.wms)return!1;var b,c=a.data.wms.params.layers||a.data.wms.params.LAYERS,d=c.split(":");
b=1<d.length?d:["",c];c=proxyUrl+wfsServer+"?service\x3dwfs\x26request\x3dDescribeFeatureType\x26version\x3d1.0.0\x26typeName\x3d"+(a.data.wms.params.layers||a.data.wms.params.LAYERS);d=Ext.create("GeoExt.data.AttributeStore");d.setUrl(c);d.load({scope:a,callback:function(a,c,d){if(d&&0<a.length){var g={};a.forEach(function(a){if(""===this.get("metadata")||!this.get("metadata"))g.attributes={};g.attributes[a.data.name]={alias:a.data.name}},this);this.set("metadata",g);this.set("wfs",{featurePrefix:b[0],
featureType:b[1],url:wfsServer});this.set("queryable",!0);this.set("clickable",!0);a=Ext.getStore("configurationTreeStore");AdmClient.app.config.layers=a.getLayerConfiguration()}else if(this.get("wms")&&this.get("wms").params&&(this.get("wms").params.LAYERS||this.get("wms").params.layers)){a=null;c=this.get("wms");for(a in this.get("srs"))break;d=this.get("bbox")[a].bbox;d=new OpenLayers.Bounds.fromArray(d);c=c.params.LAYERS||c.params.layers;Ext.Ajax.request({scope:this,url:proxyUrl+wmsServer+"?request\x3dGetFeatureInfo\x26service\x3dWMS\x26version\x3d1.1.1\x26layers\x3d"+
c+"\x26styles\x3d\x26srs\x3d"+a+"\x26bbox\x3d"+d.toString()+"\x26width\x3d1\x26height\x3d1\x26query_layers\x3d"+c+"\x26info_format\x3dapplication/vnd.ogc.gml\x26feature_count\x3d1\x26x\x3d0\x26y\x3d0",success:function(a){a=(new OpenLayers.Format.GML).read(a.responseXML);var b=Ext.getStore("configurationTreeStore");if(0<a.length){g={};if(""===this.get("metadata")||!this.get("metadata"))g.attributes={};for(var c in a[0].attributes)g.attributes[c]={alias:c};this.set("metadata",g);this.set("clickable",
!0)}else this.set("clickable",!1),this.set("queryable",!1);AdmClient.app.config.layers=b.getLayerConfiguration()}})}}})},tryToGetRecordAttribute:function(a,b){var c=null,d=a.get(b);d&&"undefined"!==typeof d?c=d:"undefined"!==typeof a.data[b]&&(c=a.data[b]);return c},nodeToLayerConfig:function(a){var b={},c=this;"name wms wfs metadataUrl isGroupLayer queryable clickable expanded".split(" ").forEach(function(c){var d=this.tryToGetRecordAttribute(a,c);void 0!==d&&(b[c]=d)},this);if(b.wms&&b.wms.options){var d=
this.tryToGetRecordAttribute(a,"isBaseLayer");d||(d=!1);b.wms.options.isBaseLayer=d;b.wms.options.visibility=this.tryToGetRecordAttribute(a,"visibility");if(void 0===b.wms.options.visibility||null===b.wms.options.visibility)b.wms.options.visibility=!1;a.data.metadata&&""!==a.data.metadata&&(b.metadata=a.data.metadata);this.tryToGetRecordAttribute(a,"queryable");this.tryToGetRecordAttribute(a,"clickable")}a.hasChildNodes()&&(b.layers=[],a.childNodes.forEach(function(a){b.layers.push(c.nodeToLayerConfig(a))}));
return b},getLayerConfiguration:function(){var a=[];this.getRootNode().childNodes.forEach(function(b){a.push(this.nodeToLayerConfig(b))},this);return a},layerUpdate:function(){AdmClient.app.config.layers=this.getLayerConfiguration()},reorderLayersOnMap:function(){if(this.map){var a=this.getRootNode();if(a){var b=this.maxLayerIndex;a.cascadeBy(function(a){if(a=a.get("layer"))a.setZIndex(b),b--},this)}}},addWMSLegend:function(a){a.get("layer")&&(a.gx_wmslegend=Ext.create("GeoExt.container.WmsLegend",
{layerRecord:a,showTitle:!1,hidden:!0,deferRender:!0,cls:"legend"}));return a},unbind:function(){this.un("beforeinsert",this.onBeforeInsertAndAppend,this);this.un("beforeappend",this.onBeforeInsertAndAppend,this);this.un("insert",this.onInsertAndAppend,this);this.un("append",this.onInsertAndAppend,this);this.un("remove",this.onRemove,this);this.un("datachangded",this.onUpdate,this);this.map=null},destroy:function(){}});
Ext.define("AdmClient.controller.ConfigLayers",{extend:Ext.app.Controller,refs:[{ref:"mapConfigLayerTree",selector:"#mapConfigLayerTree"},{ref:"mapConfigWMSLayerTree",selector:"#mapConfigWMSLayerTree"},{ref:"layerServiceSelector",selector:"#layerServiceSelector"}],views:["mapconfiguration.layer.LayerPanel"],stores:["GroupedLayerTree"],init:function(){this.control({"#mapConfigLayerTree":{checkchange:this.onNodeCheckChange},"#layerServiceSelector":{keyup:this.onWMSServiceKeyup,render:function(a){this.loadWMSCapabilities(proxyUrl+
a.getValue())}},"#newGroupLayer":{click:this.onNewGrouplayer,scope:this},checkcolumn:{checkchange:this.onChangeLayer}});this.application.on({configuration_change:this.updateLayerTree,scope:this})},onNewGrouplayer:function(){var a=this;Ext.Msg.prompt("Name","Nytt grupplagernamn:",function(b,c){"ok"==b&&a.getMapConfigLayerTree().getRootNode().appendChild({name:c,isGroupLayer:!0,expanded:!0})})},onChangeLayer:function(){this.getMapConfigLayerTree().store.save()},onWMSServiceKeyup:function(a,b){b.getKey()===
b.ENTER&&this.loadWMSCapabilities(a.getValue())},onNodeCheckChange:function(a,b,c){a.data.wms&&(a.data.wms.visibility=c)},loadWSLayers:function(a){if(a){this.getMapConfigWMSLayerTree().setLoading(!0);var b=this.getMapConfigWMSLayerTree().getStore();Ext.Ajax.request({url:a,success:function(a){a&&a.responseText&&(a=Ext.decode(a.responseText),b.setRootNode({root:!0,expanded:!0,name:"Lager",layers:this.parseLayerTree(a).map(function(a){return a.metadata=a})}));this.getMapConfigWMSLayerTree().setLoading(!1)},
failure:function(){this.getMapConfigWMSLayerTree().setLoading(!1)},scope:this})}},loadWMSCapabilities:function(a){if(a){this.getMapConfigWMSLayerTree().setLoading(!0);var b=this.getMapConfigWMSLayerTree().getStore();Ext.create("GeoExt.data.WmsCapabilitiesLayerStore",{url:a}).load({scope:this,callback:function(a){a&&0<a.length&&(a.forEach(function(a){a.data.leaf=!0;a.data.checked=null}),b.setRootNode({root:!0,expanded:!0,name:"Lager",layers:a}),this.getMapConfigWMSLayerTree().setLoading(!1))}})}},
updateLayerTree:function(a){a.layers&&0<a.layers.length&&this.getMapConfigLayerTree().getStore().setRootNode({name:a.name?a.name:"Lager",expanded:!0,layers:this.getLayerSwitcherLayers(this.parseLayerTree(a.layers))})},isWMSLayer:function(a){return a.wms?!0:!1},isOpenLayersLayer:function(a){return a.wms||a.osm||a.google||a.bing?!0:!1},isBaseLayer:function(a){return(a=this.getOptions(a))&&a.isBaseLayer?!0:!1},getOptions:function(a){if(a.wms)return a.wms.options;if(a.osm)return a.osm.options;if(a.google)return a.google.options;
if(a.bing)return a.bing.options},parseLayerTree:function(a){a.forEach(this.iterateLayers,this);return a},getLayerSwitcherLayers:function(a){return a.filter(function(a){return a.layers||this.isWMSLayer(a)?!0:!1},this)},iterateLayers:function(a){if("undefined"!==typeof a.serverId&&""!==a.serverId){var b=Ext.StoreManager.get("servers").getById(a.serverId);if(b){if(a.wms&&!a.wms.url){var c="/wms";a.wms.gwc&&(c="/gwc/service/wms");a.wms.url=b.get("url")+c}a.wfs&&!a.wfs.url&&(a.wfs.url=b.get("url"))}}this.isOpenLayersLayer(a);
a.layers?a.layers.forEach(arguments.callee,this):a.leaf=!0}});
Ext.define("AdmClient.controller.toolDetails.DrawPoint",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawPoint",config:{id:"DrawPoint",type:"DrawGeometry",iconCls:"action-drawpoint",geometry:"Point"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,
c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DrawPath",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawLine",config:{id:"DrawLine",type:"DrawGeometry",iconCls:"action-drawline",geometry:"Path"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,
this.config)}});
Ext.define("AdmClient.controller.toolDetails.DrawPolygon",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawPolygon",config:{id:"DrawPolygon",type:"DrawGeometry",iconCls:"action-drawpolygon",geometry:"Polygon"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,
this.config)}});
Ext.define("AdmClient.controller.toolDetails.DrawText",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawText",config:{id:"DrawText",type:"DrawGeometry",tooltip:"Rita etikett",iconCls:"action-drawpoint",geometry:"Point",attributes:{type:"label",label:"Ny label",metadata:{type:{hidden:!0}}}},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&
this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DrawRectangle",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawRectangle",config:{id:"DrawRectangle",type:"DrawObject",itemId:"DrawObjectR",tooltip:"Rita rektangel",iconCls:"action-draw-square",disable:!1,obectConfig:{type:"R"},attributes:{state:"GEOMETRY",metadata:{state:{hidden:!1}}}},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,
b,c){a=this.getToolsGrid().getSelectionModel().store;a.data.items[b].data.id===this.toolId&&a.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DrawOctagon",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawOctagon",config:{id:"DrawOctagon",type:"DrawObject",itemId:"DrawObjectO",tooltip:"Rita \u00e5ttkantigt objekt",iconCls:"action-draw-octagon",disable:!1,obectConfig:{type:"O"},attributes:{state:"GEOMETRY",metadata:{state:{hidden:!1}}}},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,
b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DrawL-shape",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawL-shape",config:{id:"DrawL-shape",type:"DrawObject",itemId:"DrawObjectL",tooltip:"Rita L-format objekt",iconCls:"action-draw-l",disable:!1,obectConfig:{type:"L"},attributes:{state:"GEOMETRY",metadata:{state:{hidden:!1}}}},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,
c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DrawD-shape",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DrawD-shape",config:{id:"DrawD-shape",type:"DrawObject",itemId:"DrawObjectD",tooltip:"Rita objekt med avfasade h\u00f6rn",iconCls:"action-draw-d",disable:!1,obectConfig:{type:"D"},attributes:{state:"GEOMETRY",metadata:{state:{hidden:!1}}}},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,
b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.ModifyGeometry",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"ModifyGeometry",config:{id:"ModifyGeometry",type:"ModifyGeometry"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.SelectGeometry",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"SelectGeometry",config:{id:"SelectGeometry",type:"SelectGeometry"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DeleteGeometry",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DeleteGeometry",config:{id:"DeleteGeometry",type:"DeleteGeometry"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DeleteAllFeatures",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DeleteAllFeatures",config:{id:"DeleteAllFeatures",type:"DeleteAllFeatures"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,
c,this.config)}});Ext.define("AdmClient.controller.toolDetails.FullExtent",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"FullExtent",config:{id:"FullExtent",type:"FullExtent"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.ZoomSelector",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"ZoomSelector",config:{id:"ZoomSelector",type:"ZoomSelector"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.Print",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"Print",config:{id:"Print",type:"Print"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.Identify",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"Identify",config:{id:"Identify",type:"Identify",tooltip:"F\u00e5 information om objekt i kartan",iconCls:"action-identify"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,
c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.Popup",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"Popup",config:{id:"Popup",type:"Popup",showOnlyFirstHit:!0,tolerance:3,iconCls:"action-popup",tooltip:"Klicka p\u00e5 ett object f\u00f6r information"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&
this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.Permalink",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"Permalink",config:{id:"Permalink",type:"Permalink",iconCls:"action-permalink",tooltip:"Skapa l\u00e4nk till kartan"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,
c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DetailReport",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DetailReport",config:{id:"DetailReport",type:"DetailReport"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.MeasureLine",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"MeasureLine",config:{id:"MeasureLine",type:"MeasureLine"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.MeasureArea",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"MeasureArea",config:{id:"MeasureArea",type:"MeasureArea"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.toolDetails.DeleteMeasure",{extend:AdmClient.controller.MapConfiguration,refs:[{ref:"toolsGrid",selector:"#toolsGrid"}],toolId:"DeleteMeasure",config:{id:"DeleteMeasure",type:"DeleteMeasure"},init:function(){this.control({"#toolsGrid checkcolumn":{checkchange:this.toolSelected}})},toolSelected:function(a,b,c){this.getToolsGrid().getSelectionModel().store.data.items[b].data.id===this.toolId&&this.getToolsGrid().getSelectionModel().store.checkTool(b,c,this.config)}});
Ext.define("AdmClient.controller.LayerDetails",{extend:Ext.app.Controller,refs:[{ref:"saveLayerDetail",selector:"#saveLayerDetail"},{ref:"layerDetailsGrid",selector:"#layerDetailsGrid"},{ref:"layerDetails",selector:"layerDetails"}],init:function(){this.control({"#saveLayerDetail":{click:this.save}})},save:function(){var a=this.getLayerDetailsGrid().getStore(),b=this.getLayerDetails().layer;b.metadata={};a.data.items.forEach(function(a){if((a.data.visible||a.data.alias||a.data.mainAttribute)&&""!==
a.data.alias)b.metadata.attributes||(b.metadata.attributes={}),b.metadata.attributes[a.data.name]={alias:a.data.alias,mainAttribute:"undefined"!==a.data.mainAttribute?a.data.mainAttribute:!1}});0===Object.keys(b.metadata).length&&delete b.metadata;a=this.getLayerDetails().panelGrid.store;AdmClient.app.config.layers=a.treeStore.getLayerConfiguration();this.getLayerDetails().close()}});
Ext.define("AdmClient.model.Server",{extend:AdmClient.model.SettingBase,proxy:{type:"rest",url:appPath+"/settings/servers",reader:{type:"json"}}});Ext.define("AdmClient.model.SettingBase",{extend:Ext.data.Model,fields:[{name:"name",type:"string"},{name:"url",type:"string"},{name:"username",type:"string"},{name:"password",type:"string"},{name:"note",type:"string"},{name:"ID",type:"integer"}]});
Ext.define("AdmClient.store.Servers",{extend:Ext.data.Store,model:"AdmClient.model.Server",storeId:"servers",autoLoad:!0});
Ext.define("AdmClient.store.ToolStore",{extend:Ext.data.ArrayStore,fields:[{name:"toolName",type:"string"},{name:"tool",type:"string"},{name:"info",type:"string"},{name:"id",type:"string"},{name:"selected"}],data:[["DrawGeometry","Point","Draw point","DrawPoint",!1],["DrawGeometry","Path","Draw line","DrawLine",!1],["DrawGeometry","Polygon","Draw polygon.","DrawPolygon",!1],["DrawGeometry","Text","Draw text.","DrawText",!1],["DrawObject","Rectangle","Draw rectangular object.","DrawRectangle",!1],
["DrawObject","Octagon","Draw octagonal object.","DrawOctagon",!1],["DrawObject","L-shape","Draw L-shaped object.","DrawL-shape",!1],["DrawObject","D-shape","Draw D-shaped object.","DrawD-shape",!1],["SelectGeometry","Select geometry","Tool for selecting geometry.","SelectGeometry",!1],["ModifyGeometry","Modify geometry","Tool for modify geometry.","ModifyGeometry",!1],["DeleteGeometry","Delete geometry","Tool for delete single geometry.","DeleteGeometry",!1],["DeleteAllFeatures","Delete all geometries",
"Tool for delete all geometries on map.","DeleteAllFeatures",!1],["FullExtent","Full extent","Zoom to full extent.","FullExtent",!1],["ZoomSelector","Zoom to scale","Zoom to scale.","ZoomSelector",!1],["Print","Print","Tool for printing.","Print",!1],["Identify","Identify","Identify features.","Identify",!1],["Popup","Popup","Tool to show popup window for features in popup layers.","Popup",!1],["Permalink","Permalink","Dela karta.","Permalink",!1],["DetailReport","Detail report","Tool for detail report.",
"DetailReport",!1],["MeasureArea","Measure area","Measure area in 2D.","MeasureArea",!1],["MeasureLine","Measure line","Measure line in 2D.","MeasureLine",!1],["DeleteMeasure","Delete measure","Tool for delete measure.","DeleteMeasure",!1]],checkTool:function(a,b,c){var d=this.data.items[a].data;if(b)0===AdmClient.app.config.tools.filter(function(a){return a.id===d.id}).length&&AdmClient.app.config.tools.push(c);else for(a=0;a<AdmClient.app.config.tools.length;a++)c=AdmClient.app.config.tools[a],
d.id===c.id&&AdmClient.app.config.tools.splice(a,1);this.commitChanges()}});Ext.define("AdmClient.model.SearchServer",{extend:AdmClient.model.SettingBase,proxy:{type:"rest",url:appPath+"/searchserver/server",reader:{type:"json"}}});Ext.define("AdmClient.store.SearchServer",{extend:Ext.data.Store,model:"AdmClient.model.SearchServer",autoLoad:!0});
Ext.define("AdmClient.store.Municipalities",{extend:Ext.data.ArrayStore,fields:[{name:"Municipality",type:"string"},{name:"municipalityCode",type:"string"},{name:"selected"}],data:[["Nordanstig","2132",!1],["Sundsvall","2281",!1],["Timr\u00e5","2262",!1],["\u00c5nge","2260",!1],["H\u00e4rn\u00f6sand","2280",!1],["Kramfors","2282",!1],["Sollefte\u00e5","2283",!1],["\u00d6rnskoldsvik","2284",!1],["Nordmaling","2401",!1]]});
Ext.define("AdmClient.store.WmsCapabilitiesLayerTree",{extend:Ext.data.TreeStore,model:"GeoExt.data.WmsCapabilitiesLayerModel",alias:"widget.wmsCapabilitiesLayerTree",defaultRootProperty:"layers"});Ext.define("AdmClient.view.main.MainToolbar",{extend:Ext.toolbar.Toolbar,alias:"widget.mainToolbar",margin:8,items:["-\x3e",{xtype:"button",text:"About",pack:"right",itemId:"about"}],initComponent:function(){this.callParent(arguments)}});
Ext.define("AdmClient.view.mapconfiguration.tools.ToolsGrid",{extend:Ext.grid.Panel,alias:"widget.toolsGrid",initComponent:function(){Ext.applyIf(this,{columns:[{text:"Verktyg",dataIndex:"tool",width:200},{text:"Info",dataIndex:"info",width:400},{xtype:"checkcolumn",dataIndex:"selected"}]});this.store=new AdmClient.store.ToolStore;this.callParent(arguments)}});
Ext.define("AdmClient.view.Settings",{extend:Ext.panel.Panel,alias:"widget.settings",title:"Settings",layout:"fit",initComponent:function(){this.items=[{xtype:"tabpanel",items:[{margin:8,title:"Servers",border:!0,items:[{xtype:"gisServersGrid",margin:8,store:new AdmClient.store.Servers,itemId:"srvGrid",title:"GIS-Servers",border:!0},{xtype:"settingsGridBase",margin:8,store:new AdmClient.store.SearchServer,itemId:"searchGrid",title:"Geosearch",border:!0}]},{xtype:"layers"}]}];this.callParent(arguments)}});
Ext.define("AdmClient.view.settings.SettingsGridBase",{extend:Ext.grid.Panel,alias:"widget.settingsGridBase",tbar:[{text:"Save",itemId:"saveSettings"},{text:"+",itemId:"addSettingsRow"}],initComponent:function(){this.cellEditing=new Ext.grid.plugin.CellEditing({clicksToEdit:1});Ext.applyIf(this,{plugins:[this.cellEditing],columns:[{text:"Name",dataIndex:"name",editor:{allowBlank:!1}},{text:"URL",dataIndex:"url",editor:{allowBlank:!1}},{text:"Username",dataIndex:"username",editor:{allowBlank:!1}},
{text:"Password",dataIndex:"password",editor:{allowBlank:!1},renderer:function(a){return Array(a.length+1).join("*")}},{text:"Note",dataIndex:"note",editor:{allowBlank:!0}},{xtype:"actioncolumn",menudisabled:!0,items:[{icon:"icons/minus-small.png",handler:function(a,b){Ext.MessageBox.confirm("Delete?","Sure you want to unregister server? Layers from this server would not be feeded to configurations associated with this server.",function(c){"yes"===c&&(c=a.getStore().getAt(b),a.getStore().remove(c),
a.getStore().sync())},this)}}]}]});this.callParent(arguments)}});Ext.define("AdmClient.view.settings.GisServersGrid",{extend:AdmClient.view.settings.SettingsGridBase,alias:"widget.gisServersGrid"});Ext.define("AdmClient.view.settings.SearchServersGrid",{extend:AdmClient.view.settings.SettingsGridBase,alias:"widget.SearchServersGrid",initComponent:function(){this.callParent(arguments)}});
Ext.define("AdmClient.view.about.About",{extend:Ext.window.Window,alias:"widget.admAbout",initComponent:function(){Ext.applyIf(this,{title:"About",width:600,height:400,html:"\x3ccenter\x3eAbout\x3c/center\x3e"});this.callParent(arguments)}});
Ext.define("AdmClient.model.Config",{mixins:{observable:Ext.util.Observable},setId:function(a){this.configId=a},setName:function(a){this.name=a},setMaxExtent:function(a){this.maxExtent=a},setExtent:function(a){this.extent=a},setAttribution:function(a){this.attribution=a},setDrawStyle:function(a){this.drawStyle=a},setTools:function(a){this.tools=a},setLayers:function(a){this.layers=a},setVersion:function(a){this.version=a},setAutoClearDrawLayer:function(a){this.autoClearDrawLayer=a},getConfig:function(){var a=
{};a.configId=this.configId;a.name=this.name;a.maxExtent=this.maxExtent;a.extent=this.extent;a.attribution=this.attribution;a.drawStyle=this.drawStyle;a.tools=this.tools;a.layers=this.layers;a.version=this.version;a.autoClearDrawLayer=this.autoClearDrawLayer;return a},loadConfig:function(a){for(var b in a)this[b]=a[b]},constructor:function(a){this.mixins.observable.constructor.call(this,a);this.addEvents("updatedConfig")}});
Ext.application({name:"AdmClient",appFolder:"src/main/javascript/",controllers:"Main Layers MainToolbar Servers MapConfiguration ToolsGrid Layers Search PreviewMap ConfigLayers LayerDetails toolDetails.DrawPoint toolDetails.DrawPath toolDetails.DrawPolygon toolDetails.DrawText toolDetails.DrawRectangle toolDetails.DrawOctagon toolDetails.DrawL-shape toolDetails.DrawD-shape toolDetails.DeleteGeometry toolDetails.ModifyGeometry toolDetails.SelectGeometry toolDetails.DeleteAllFeatures toolDetails.FullExtent toolDetails.ZoomSelector toolDetails.Print toolDetails.Identify toolDetails.Popup toolDetails.Permalink toolDetails.DetailReport toolDetails.MeasureLine toolDetails.MeasureArea toolDetails.DeleteMeasure".split(" "),models:["SettingBase",
"Server","SearchServer","Layer","Config"],launch:function(){this.config=Ext.create("AdmClient.model.Config");this.admClient=Ext.create("Ext.container.Container",{layout:"border",renderTo:"contentitem",height:window.innerHeight-70,items:[{xtype:"main"}]})}});Ext.define("AdmClient.model.Server",{extend:AdmClient.model.SettingBase,proxy:{type:"rest",url:appPath+"/settings/servers",reader:{type:"json"}}});Ext.define("AdmClient.store.LayerDetails",{extend:GeoExt.data.AttributeStore});
Ext.define("AdmClient.store.WmsCapabilitiesLayerStore",{extend:Ext.data.JsonStore,model:"GeoExt.data.WmsCapabilitiesLayerModel",alias:"widget.wmsCapabilities"});
Ext.define("AdmClient.view.mapconfiguration.map.Extent",{extend:Ext.panel.Panel,alias:"widget.extent",initComponent:function(){this.items=[{title:"Map extent",layout:"fit",border:!1,itemId:"mapPanel",margin:12,tbar:[{xtype:"button",itemId:"pan",icon:"resources/images/arrow-move.png",enableToggle:!0,pressed:!0},{xtype:"button",itemId:"markExtent",icon:"resources/images/figur-R.png",enableToggle:!0}]}];this.callParent(arguments)}});